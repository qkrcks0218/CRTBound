Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
X <- cbind(1,X1,X2,X3,n)
result <- Data.Reform(Y,Z,A,C,X,seed=1)
# ITT
ITT(result)
# HTE
HTE(result)
# Subgroup
Bound1 <- SharpBound(result,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound2 <- LongHudgens(result,paraC=c(3),CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound3 <- Bound.Intersect(Bound1,Bound2)
Bound1$Bound
Bound1$BootCIBound
Bound2$Bound.Adj
Bound2$BootCIBound.Adj
Bound3$Bound
Bound3$BootCIBound
source("Function_CRTBound.R")
set.seed(1234)
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
mean(Y1-Y0)
summary(lm(I(Y1-Y0)~X[,-1]))
mean((Y1-Y0)[NT])
mean((Y1-Y0)[AT])
mean((Y1-Y0)[CO])
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
result <- Data.Reform(Y,Z,A,C,X,seed=1)
# ITT
ITT(result)
# HTE
HTE(result)
# Subgroup
Bound1 <- SharpBound(result,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound2 <- LongHudgens(result,paraC=c(3),CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound3 <- Bound.Intersect(Bound1,Bound2)
Bound1$Bound
Bound1$BootCIBound
Bound2$Bound.Adj
Bound2$BootCIBound.Adj
Bound3$Bound
Bound3$BootCIBound
source("Function_CRTBound.R")
set.seed(1234)
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
mean(Y1-Y0)
summary(lm(I(Y1-Y0)~X[,-1]))
mean((Y1-Y0)[NT])
mean((Y1-Y0)[AT])
mean((Y1-Y0)[CO])
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
result <- Data.Reform(Y,Z,A,C,X,seed=1)
# ITT
ITT(result)
# HTE
HTE(result)
# Subgroup
Bound1 <- SharpBound(result,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound2 <- LongHudgens(result,paraC=c(3),CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
Bound3 <- Bound.Intersect(Bound1,Bound2)
Bound1$Bound
Bound1$BootCIBound
Bound2$Bound.Adj
Bound2$BootCIBound.Adj
Bound3$Bound
Bound3$BootCIBound
library(CRTBound)
getwd()
library(CRTBound)
library(CRTBound)
?logistic
library(rlearner)
?continuous_toy_data_simulation
logistic(1)
library(dfdf)
library(CRTBound)
library(CRTBound)
library(CRTBound)
library(CRTBound)
library(CRTBound)
library(CRTBound)
library(CRTBound)
?solution
library(CRTBound)
library(CRTBound)
?solution
library(CRTBound)
?solution
L <- c(1,1,1,1,1,0,0,0,0,0)
x <- rnorm(10)
solution(x,L,0.01,0.01,10^(-10))
L <- as.numeric(x>0)
solution(x,L,0.01,0.01,10^(-10))
solution(x,L,0.01,0.01,10^(-4))
solution(x,L,10^(-5),10^(-5),10^(-4))
solution(x,4,0.01,0.01,10^(-4))
solution(x,4,0.01,0.01,10^(-4))
solution(L,4,0.01,0.01,10^(-4))
solution(x,4,0.01,0.01,10^(-4))
solution(L,4,0.01,0.01,10^(-4))
solution(L,4,0.01,0.01,10^(-4))
library(CRTBound)
L <- seq(1,10,by=1)
T <- 5
c <- h <- 10^(-5)
thr <- 10^(-5)
solution(L,T,h,c,thr)
L <- seq(1,10,by=1)
T <- 6
c <- h <- 10^(-5)
thr <- 10^(-5)
solution(L,T,h,c,thr) # Returns 5.5
L <- seq(1,10,by=1)
T <- 6
c <- h <- 10^(-4)
thr <- 10^(-4)
solution(L,T,h,c,thr) # Returns 5.5
L <- seq(1.1,1.8,2.7,4.1,5.2,6.1,7.4.7.9,8.8,9.1,10.2)
T <- 6
c <- h <- 10^(-4)
thr <- 10^(-4)
solution(L,T,h,c,thr) # Returns 5.5
L <- c(1.1,1.8,2.7,4.1,5.2,6.1,7.4.7.9,8.8,9.1,10.2)
T <- 6
c <- h <- 10^(-4)
thr <- 10^(-4)
solution(L,T,h,c,thr) # Returns 5.5
L <- c(1.1, 1.8, 2.7, 4.1, 5.2,
6.1, 7.4, 7.9, 8.8, 9.9)
T <- 6
c <- h <- 10^(-4)
thr <- 10^(-4)
solution(L,T,h,c,thr) # Returns 5.5
L <- c(1.1, 1.8, 2.7, 4.1, 5.2,
6.1, 7.4, 7.9, 8.8, 9.9)
T <- 5
c <- h <- 10^(-4)
thr <- 10^(-4)
solution(L,T,h,c,thr) # Returns 5.5
library(CRTBound)
?solution
library(CRTBound)
library(CRTBound)
?Data.Reform
library(CRTBound)
library(CRTBound)
library(CRTBound)
?ITT
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# HT Effect
#################################
HT.Data <- HTE(Reformed.Data)
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# HT Effect
#################################
HT.Data <- HTE(Reformed.Data)
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# HT Effect
#################################
HT.Data <- HTE(Reformed.Data)
HT.Data
HT.Data <- HTE(Reformed.Data,Xvar=c(1,2,3,4))
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# Sharp Bounds
#################################
Bound1 <- SharpBound(Reformed.Data,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# Sharp Bounds
#################################
Bound1 <- SharpBound(Reformed.Data,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
#################################
# Generate Population
#################################
J <- 100 ; m <- 60
nc <- sample(c(3,4,5),J,replace=T)
N <- sum(nc)
C <- rep(1:J,nc)
n <- rep(nc,nc)
X1 <- rnorm(N)
X2 <- rbinom(N,1,0.3)
X3 <- rep(rnorm(J),nc)
A0 <- rbinom(N,1,logistic(-2+2*X3))
A1 <- apply(cbind(A0,rbinom(N,1,logistic(-2+3*X1+3*X2+2*X3))),1,max)
OtherA1 <- (rep(aggregate(A1~C,FUN="sum")[,2],nc)-A1)/(n-1)
NT <- which(A1==0 & A0==0)
AT <- which(A1==1 & A0==1)
CO <- which(A1==1 & A0==0)
Y0 <- Y1 <- rep(0,N)
for(jj in NT){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(-2+2*OtherA1[jj])))
}
for(jj in AT){
Y0[jj] <- rbinom(1,1,logistic(2+X1[jj]+X2[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
for(jj in CO){
Y0[jj] <- rbinom(1,1,logistic(-2+2*OtherA1[jj]))
Y1[jj] <- max(Y0[jj],rbinom(1,1,logistic(2+X1[jj]+X2[jj])))
}
X <- cbind(1,X1,X2,X3,n)
Zc <- rep(0,J)
Zc[sort(sample(J,m))] <- 1
Z <- rep(Zc,nc)
A <- Z*A1 + (1-Z)*A0
Y <- Z*Y1 + (1-Z)*Y0
#################################
# Reform the Data
#################################
Reformed.Data <- Data.Reform(Y,Z,A,C,X,seed=1)
#################################
# Sharp Bounds
#################################
Bound1 <- SharpBound(Reformed.Data,paraC=c(1,2,3,4),method="Logistic",CIcalc=TRUE,SSsize=100,alpha=0.05,seed=1)
attributes(Bound1)
library(CRTBound)
?LongHudgens
library(CRTBound)
