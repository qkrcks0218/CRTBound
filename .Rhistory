}
colnames(Result$Bound.NoAdj) <-
colnames(Result$Resample.Bound.NoAdj) <-
colnames(Result$BootCIBound.NoAdj) <- c("NT.LB","NT.UB","AT.LB","AT.UB","CO.LB","CO.UB")
if(!is.null(paraC)){
colnames(Result$Bound.Adj) <-
colnames(Result$Resample.Bound.Adj) <-
colnames(Result$BootCIBound.Adj) <- c("NT.LB","NT.UB","AT.LB","AT.UB","CO.LB","CO.UB")
}
}
options(warn = defaultW)
return(Result)
}
LongHudgens(result,paraC=NULL,CIcalc=TRUE,SSsize=100,level=0.95,seed=1)
Bound2 <- LongHudgens(result,paraC=c(3),CIcalc=TRUE,SSsize=100,level=0.95,seed=1)
attributes(Bound2)
Bound3 <- Bound.Intersect(Bound1,Bound2,level=0.95)
attributes(Bound3)
devtools::install_github("qkrcks0218/CRTBound")
library(CRTBound)
library(CRTBound)
?logistic
?solution
?Data.Reform
?ITT
?HTE
?SharpBound
library(CRTBound)
?SharpBound
library(CRTBound)
devtools::install_github("qkrcks0218/CRTBound")
devtools::install_github("qkrcks0218/CRTBound")
library("CRTBound")
library("CRTBound")
###################################
# Data cleaning
###################################
dir <- "http://web.hku.hk/~bcowling/influenza/data/HongKongNPIstudyV3/"
LabPCR <- read.csv(paste(dir, "home_pcr.csv", sep=""))
HHchar <- read.csv(paste(dir, "hchar_h.csv", sep=""))
HHadhere <- read.csv(paste(dir, "adherence_m.csv", sep=""))
mark <- data.frame(hhID = unique(HHadhere$hhID))                                            # unique hhID
LabPCR <- merge(LabPCR,mark,by="hhID",all.y=TRUE)                                           # merge all hhID in HHadhere
LabPCR <- LabPCR[order(LabPCR$hhID,LabPCR$member,LabPCR$visit),]                            # sort
AData <- data.frame(hhID = HHadhere$hhID, member = HHadhere$member)                         # Analyzing data
hc.temp <- reshape(LabPCR, timevar="visit", idvar=c("hhID","member"), direction="wide", v.names="PCR")
AData <- merge(AData,hc.temp, by=c("hhID","member"), all.x=TRUE)
names(AData) <- c("hhID","member","V1","V2","V3")      # V1, V2, V3 : Outcome at visiting 1,2,3, 1337 contacts, 322 households
## exd_index: none of V0/V1 culture is A/B; Contact exclusion: V1 culture is A/B
for (i in 1:nrow(AData)){
if(AData$member[i]==0 & ( (!is.na(AData$V1[i]) & AData$V1[i]==0)|is.na(AData$V1[i]) )) {
AData$exd_index[i] <- 1
} else {
AData$exd_index[i] <- 0
}
if(AData$member[i]!=0 &  !is.na(AData$V1[i]) & AData$V1[i]!=0) {
AData$d_contact[i] <- 1
} else {
AData$d_contact[i] <- 0
}
}
# exd_index = 1 : Exclude index member because they were not infected or NA
# d_contact = 1 : Exclude other members because they were infected
d_contactid <- unique(AData$hhID[AData$d_contact==1|AData$exd_index==1]) # for excluding co-index households
d_contact <- data.frame(hhID=d_contactid)
d_contact$d_contact <- 1
AData <- merge(AData[,1:5],d_contact,all.x=TRUE)
AData.valid <- AData[is.na(AData$d_contact),-6]         # 1053 contacts, 259 households
# Following Cowling et al. (2009), replace NA values of V1,V2,V3 with 0
AData.valid$V1[is.na(AData.valid$V1)] <- 0
AData.valid$V2[is.na(AData.valid$V2)] <- 0
AData.valid$V3[is.na(AData.valid$V3)] <- 0
# Inserting intervention
intervention <- read.csv(paste(dir, "randomarm_407.csv", sep=""))
intervention$hhID <- as.numeric(substr(intervention$hhID,5,7))
AData.valid <- merge(AData.valid,intervention[,1:2],by="hhID")
AData.valid <- merge(AData.valid,HHadhere,by=c("hhID","member"),all.x=TRUE)
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==1)    # 90 clusters under control
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==3)    # 86 clusters under hand sanitizer
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==4)    # 83 clusters under Facemask + hand sanitizer
# Remove households that include contacts whose self-reported mask and/or hand sanitizer usage are NA
errorHH <- data.frame(hhID=unique(AData.valid[is.na(AData.valid$mask+AData.valid$handrub),1]),error=1)
AData.valid.noerror <- merge(AData.valid,errorHH,by="hhID",all.x=TRUE)
AData.valid.noerror <- AData.valid.noerror[is.na(AData.valid.noerror$error),]
AData.valid <- AData.valid.noerror[,-dim(AData.valid.noerror)[2]]       # 937 contacts, 232 households
# Remove households that include contacts whose covariates are missing
errorHH <- data.frame(hhID=unique(AData.valid[is.na(AData.valid$age+AData.valid$male+AData.valid$vaccine08),1]),error=1)
AData.valid.noerror <- merge(AData.valid,errorHH,by="hhID",all.x=TRUE)
AData.valid.noerror <- AData.valid.noerror[is.na(AData.valid.noerror$error),]
AData.valid <- AData.valid.noerror[,-dim(AData.valid.noerror)[2]]       # 919 contacts, 227 households
# Focusing on A=0 (control) vs A=1 (Facemask + Hand sanitizer) by removing households that were recommended to use facemasks only
AData.valid <- AData.valid[AData.valid$intervention!=3,]                # 615 contacts, 151 households
# Remove redundant variables
AData.valid <- AData.valid[,c("hhID","member","V2","V3","intervention","mask","handrub","male","age","vaccine08")]
# Focusing on households that (intervention-onset)<=36hr
# Removing index contact
# Using index contact's covariates as cluster-level covariates
threshold <- 36
AData.subgroup <- merge(AData.valid,HHchar[,c(1,4,9)],by="hhID")
AData.subgroup.index <- AData.subgroup[AData.subgroup$member==0,c(1,8,9,10)]
colnames(AData.subgroup.index) <- c("hhID","i.male","i.age","i.vaccine08")
AData.subgroup <- merge(AData.subgroup,AData.subgroup.index,by="hhID")
AData.subgroup <- AData.subgroup[abs(AData.subgroup$onset_v1_delay)<=threshold,]
HHsize <- AData.subgroup[AData.subgroup$member==0,]$house_size
AData.subgroup <- AData.subgroup[AData.subgroup$member>0,]              # 290 non-index contacts, 96 households
###################################
# Generate Simulated Data
###################################
probCS <- function(X){
age <- X[,3]
gender <- X[,2]
probNT <- probAT <- probCO <- rep(0,dim(X)[1])
for(jj in 1:dim(X)[1]){
if(gender[jj]==1){
PCO <- exp( -(age[jj]-20)*(age[jj]-50)/150 )
PAT <- exp( -(age[jj]-40)*(age[jj]-65)/150 )
PNT <- 1
probCO[jj] <- PCO/(PNT+PAT+PCO)
probNT[jj] <- PNT/(PNT+PAT+PCO)
probAT[jj] <- PAT/(PNT+PAT+PCO)
} else {
PCO <- exp( -(age[jj]-20)*(age[jj]-50)/20 )
PAT <- exp( -(age[jj]-40)*(age[jj]-65)/20 )
PNT <- 1
probCO[jj] <- PCO/(PNT+PAT+PCO)
probNT[jj] <- PNT/(PNT+PAT+PCO)
probAT[jj] <- PAT/(PNT+PAT+PCO)
}
}
return(cbind(probNT,probAT,probCO))
}
###################################
# Compliance Probability
###################################
# png("Compliance.png",width=7,height=2,unit="in",res=500)
X <- expand.grid(1,c(0,1),seq(0,100,1))
PROB <- probCS(X)
layout(matrix(c(1,2,3,4,5,6),1,3,byrow=T),widths=c(3,3,1),heights=c(1))
par(mar=c(3,3,2,1))
plot(X[X[,2]==1,3], PROB[X[,2]==1,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X[X[,2]==1,3], PROB[X[,2]==1,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X[X[,2]==1,3], PROB[X[,2]==1,3],ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(ylab="Prob",line=2)
title(main="Male",line=1)
plot(X[X[,2]==0,3], PROB[X[,2]==0,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X[X[,2]==0,3], PROB[X[,2]==0,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X[X[,2]==0,3], PROB[X[,2]==0,3],xlim=c(0,100),ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(main="Female",line=1)
plot.new()
segments(0,0.7,0.3,0.7,col=1)
text(0.4,0.7,"NT",pos=4)
segments(0,0.5,0.3,0.5,col=2)
text(0.4,0.5,"AT",pos=4)
segments(0,0.3,0.3,0.3,col=4)
text(0.4,0.3,"CO",pos=4)
result <- list()
result$Y <- rep(0,length(AData.valid$V3))
result$Z <- as.numeric(AData.valid$intervention==4)
result$C <- AData.valid$hhID
result$A <- rep(0,length(AData.valid$V3))
result$Class <- unique(result$C)
result$J <- length(table(result$C))
result$N <- length(result$Y)
result$n <- rep(0,result$N)
for(jj in 1:length(result$Y)){
result$n[jj] <- sum(result$C==result$C[jj])
}
result$nc <- rep(0,result$J)
for(jj in 1:result$J){
result$nc[jj] <- sum(result$C==result$Class[jj])
}
result$Zc <- as.numeric(unique(cbind(result$C,result$Z))[,2])
result$m <- sum(result$Zc)                                # Number of clusters Z=1
XX <- AData.valid[,c("male","age","vaccine08")]
ff <- formula("~male+age+I(age^2)+vaccine08")
result$X <- model.matrix(ff,XX)
colnames(result$X)[1] <- "Const"
PROB <- probCS(result$X)
result$probNT <- PROB[,1]
result$probAT <- PROB[,2]
result$probCO <- PROB[,3]
###################################
# Compliance Probability
###################################
# png("Compliance.png",width=7,height=2,unit="in",res=500)
X <- expand.grid(1,c(0,1),seq(0,100,1))
PROB <- probCS(X)
layout(matrix(c(1,2,3,4,5,6),1,3,byrow=T),widths=c(3,3,1),heights=c(1))
par(mar=c(3,3,2,1))
plot(X[X[,2]==1,3], PROB[X[,2]==1,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X[X[,2]==1,3], PROB[X[,2]==1,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X[X[,2]==1,3], PROB[X[,2]==1,3],ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(ylab="Prob",line=2)
title(main="Male",line=1)
plot(X[X[,2]==0,3], PROB[X[,2]==0,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X[X[,2]==0,3], PROB[X[,2]==0,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X[X[,2]==0,3], PROB[X[,2]==0,3],xlim=c(0,100),ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(main="Female",line=1)
plot.new()
segments(0,0.7,0.3,0.7,col=1)
text(0.4,0.7,"NT",pos=4)
segments(0,0.5,0.3,0.5,col=2)
text(0.4,0.5,"AT",pos=4)
segments(0,0.3,0.3,0.3,col=4)
text(0.4,0.3,"CO",pos=4)
# dev.off()
###################################
# Reform Data
###################################
Simulated.Data <- list()
Simulated.Data$Y <- rep(0,length(AData.valid$V3))
Simulated.Data$Z <- as.numeric(AData.valid$intervention==4)
Simulated.Data$C <- AData.valid$hhID
Simulated.Data$A <- rep(0,length(AData.valid$V3))
Simulated.Data$Class <- unique(Simulated.Data$C)
Simulated.Data$J <- length(table(Simulated.Data$C))
Simulated.Data$N <- length(Simulated.Data$Y)
Simulated.Data$n <- rep(0,Simulated.Data$N)
for(jj in 1:length(Simulated.Data$Y)){
Simulated.Data$n[jj] <- sum(Simulated.Data$C==Simulated.Data$C[jj])
}
Simulated.Data$nc <- rep(0,Simulated.Data$J)
for(jj in 1:Simulated.Data$J){
Simulated.Data$nc[jj] <- sum(Simulated.Data$C==Simulated.Data$Class[jj])
}
Simulated.Data$Zc <- as.numeric(unique(cbind(Simulated.Data$C,Simulated.Data$Z))[,2])
Simulated.Data$m <- sum(Simulated.Data$Zc)                                # Number of clusters Z=1
XX <- AData.valid[,c("male","age","vaccine08")]
ff <- formula("~male+age+I(age^2)+vaccine08")
Simulated.Data$X <- model.matrix(ff,XX)
colnames(Simulated.Data$X)[1] <- "Const"
PROB <- probCS(Simulated.Data$X)
Simulated.Data$probNT <- PROB[,1]
Simulated.Data$probAT <- PROB[,2]
Simulated.Data$probCO <- PROB[,3]
set.seed(8888)
Simulated.Data$CompSt <- rep("NT",Simulated.Data$N)
for(jj in 1:Simulated.Data$N){
Simulated.Data$CompSt[jj] <- sample(c("NT","AT","CO"),1,prob=c(Simulated.Data$probNT[jj],Simulated.Data$probAT[jj],Simulated.Data$probCO[jj]))
}
prop.of.trt1 <- prop.of.trt0 <- rep(0,length(Simulated.Data$Y))
for(jj in 1:length(Simulated.Data$Y)){
groupind <- which(Simulated.Data$C==Simulated.Data$C[jj])
groupind <- setdiff(groupind,jj)
if(length(groupind)>0){
prop.of.trt1[jj] <- sum(Simulated.Data$CompSt[groupind]!="NT")/length(groupind)
prop.of.trt0[jj] <- sum(Simulated.Data$CompSt[groupind]=="AT")/length(groupind)
} else {
prop.of.trt1[jj] <- 0
prop.of.trt0[jj] <- 0
}
}
para <- c(-3,2,4,2)
probA0 <- rep(para[1],length(Simulated.Data$Y)) +                                   # Base (-3)
para[2]*as.numeric(Simulated.Data$CompSt=="AT") +                               # Treatment effect (2)
para[3]*AData.valid[,"vaccine08"]*as.numeric(Simulated.Data$CompSt=="AT") +          # Additional treatment effect on individuals that have been vaccinated (4)
para[4]*prop.of.trt0*as.numeric(Simulated.Data$CompSt!="AT")                    # spillover effect from AT to nonAT (2)
probA1 <- rep(para[1],length(Simulated.Data$Y)) +                                   # Base (-3)
para[2]*as.numeric(Simulated.Data$CompSt!="NT") +                               # Treatment effect (2)
para[3]*AData.valid[,"vaccine08"]*as.numeric(Simulated.Data$CompSt!="NT") +          # Additional treatment effect on individuals that have been vaccinated (4)
para[4]*prop.of.trt1*as.numeric(Simulated.Data$CompSt=="NT")                    # spillover effect from nonNT to NT (2)
Simulated.Data$Y0 <- rbinom(length(Simulated.Data$Y),1,1/(1+exp(-probA0)))
Simulated.Data$Y1pot <- rbinom(length(Simulated.Data$Y),1,1/(1+exp(-probA1)))
Simulated.Data$Y1 <- apply(cbind(Simulated.Data$Y1pot,Simulated.Data$Y0),1,max)
set.seed(1234)
Simulated.Data$Zc <- rep(0,length(Simulated.Data$Zc))
Simulated.Data$Zc[sample(1:length(Simulated.Data$Zc),Simulated.Data$m)] <- 1
for(ii in 1:Simulated.Data$J){
Simulated.Data$Z[which(Simulated.Data$C==Simulated.Data$Class[ii])] <- Simulated.Data$Zc[ii]
}
Simulated.Data$A <- as.numeric(Simulated.Data$CompSt=="CO")*Simulated.Data$Z+as.numeric(Simulated.Data$CompSt=="AT")
Simulated.Data$Y <- Simulated.Data$Y1*Simulated.Data$Z + Simulated.Data$Y0*(1-Simulated.Data$Z)
Simulated.Data$trt1 <- prop.of.trt1
Simulated.Data$trt0 <- prop.of.trt0
Simulated.Data$Type <- "Simulation"
set.seed(8888)
Simulated.Data$error <- cbind( 2*runif(Simulated.Data$N)*(10^(-10)) - 10^(-10),
2*runif(Simulated.Data$N)*(10^(-10)) - 10^(-10),
2*runif(Simulated.Data$N)*(10^(-10)) - 10^(-10))
###################################
# True Effects
###################################
TrueITT <- mean( Simulated.Data$Y1-Simulated.Data$Y0 )
TrueNT <- sum( (Simulated.Data$Y1-Simulated.Data$Y0)*as.numeric( Simulated.Data$CompSt=="NT" ) )/ sum(as.numeric( Simulated.Data$CompSt=="NT" )) # 35/312
TrueAT <- sum( (Simulated.Data$Y1-Simulated.Data$Y0)*as.numeric( Simulated.Data$CompSt=="AT" ) )/ sum(as.numeric( Simulated.Data$CompSt=="AT" )) # 11/67
TrueCO <- sum( (Simulated.Data$Y1-Simulated.Data$Y0)*as.numeric( Simulated.Data$CompSt=="CO" ) )/ sum(as.numeric( Simulated.Data$CompSt=="CO" )) # 76/236
# save(Simulated.Data,file="SimulatedData_Full.RData")
library("CRTBound")
###################################
# Data cleaning
###################################
dir <- "http://web.hku.hk/~bcowling/influenza/data/HongKongNPIstudyV3/"
LabPCR <- read.csv(paste(dir, "home_pcr.csv", sep=""))
HHchar <- read.csv(paste(dir, "hchar_h.csv", sep=""))
HHadhere <- read.csv(paste(dir, "adherence_m.csv", sep=""))
mark <- data.frame(hhID = unique(HHadhere$hhID))                                            # unique hhID
LabPCR <- merge(LabPCR,mark,by="hhID",all.y=TRUE)                                           # merge all hhID in HHadhere
LabPCR <- LabPCR[order(LabPCR$hhID,LabPCR$member,LabPCR$visit),]                            # sort
AData <- data.frame(hhID = HHadhere$hhID, member = HHadhere$member)                         # Analyzing data
hc.temp <- reshape(LabPCR, timevar="visit", idvar=c("hhID","member"), direction="wide", v.names="PCR")
AData <- merge(AData,hc.temp, by=c("hhID","member"), all.x=TRUE)
names(AData) <- c("hhID","member","V1","V2","V3")      # V1, V2, V3 : Outcome at visiting 1,2,3, 1337 contacts, 322 households
## exd_index: none of V0/V1 culture is A/B; Contact exclusion: V1 culture is A/B
for (i in 1:nrow(AData)){
if(AData$member[i]==0 & ( (!is.na(AData$V1[i]) & AData$V1[i]==0)|is.na(AData$V1[i]) )) {
AData$exd_index[i] <- 1
} else {
AData$exd_index[i] <- 0
}
if(AData$member[i]!=0 &  !is.na(AData$V1[i]) & AData$V1[i]!=0) {
AData$d_contact[i] <- 1
} else {
AData$d_contact[i] <- 0
}
}
# exd_index = 1 : Exclude index member because they were not infected or NA
# d_contact = 1 : Exclude other members because they were infected
d_contactid <- unique(AData$hhID[AData$d_contact==1|AData$exd_index==1]) # for excluding co-index households
d_contact <- data.frame(hhID=d_contactid)
d_contact$d_contact <- 1
AData <- merge(AData[,1:5],d_contact,all.x=TRUE)
AData.valid <- AData[is.na(AData$d_contact),-6]         # 1053 contacts, 259 households
# Following Cowling et al. (2009), replace NA values of V1,V2,V3 with 0
AData.valid$V1[is.na(AData.valid$V1)] <- 0
AData.valid$V2[is.na(AData.valid$V2)] <- 0
AData.valid$V3[is.na(AData.valid$V3)] <- 0
# Inserting intervention
intervention <- read.csv(paste(dir, "randomarm_407.csv", sep=""))
intervention$hhID <- as.numeric(substr(intervention$hhID,5,7))
AData.valid <- merge(AData.valid,intervention[,1:2],by="hhID")
AData.valid <- merge(AData.valid,HHadhere,by=c("hhID","member"),all.x=TRUE)
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==1)    # 90 clusters under control
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==3)    # 86 clusters under hand sanitizer
sum(unique(cbind(AData.valid$hhID,AData.valid$intervention))[,2]==4)    # 83 clusters under Facemask + hand sanitizer
# Remove households that include contacts whose self-reported mask and/or hand sanitizer usage are NA
errorHH <- data.frame(hhID=unique(AData.valid[is.na(AData.valid$mask+AData.valid$handrub),1]),error=1)
AData.valid.noerror <- merge(AData.valid,errorHH,by="hhID",all.x=TRUE)
AData.valid.noerror <- AData.valid.noerror[is.na(AData.valid.noerror$error),]
AData.valid <- AData.valid.noerror[,-dim(AData.valid.noerror)[2]]       # 937 contacts, 232 households
# Remove households that include contacts whose covariates are missing
errorHH <- data.frame(hhID=unique(AData.valid[is.na(AData.valid$age+AData.valid$male+AData.valid$vaccine08),1]),error=1)
AData.valid.noerror <- merge(AData.valid,errorHH,by="hhID",all.x=TRUE)
AData.valid.noerror <- AData.valid.noerror[is.na(AData.valid.noerror$error),]
AData.valid <- AData.valid.noerror[,-dim(AData.valid.noerror)[2]]       # 919 contacts, 227 households
# Focusing on A=0 (control) vs A=1 (Facemask + Hand sanitizer) by removing households that were recommended to use facemasks only
AData.valid <- AData.valid[AData.valid$intervention!=3,]                # 615 contacts, 151 households
# Remove redundant variables
AData.valid <- AData.valid[,c("hhID","member","V2","V3","intervention","mask","handrub","male","age","vaccine08")]
###################################
# Generate Simulated Data
###################################
probCS <- function(X){
age <- X[,3]
gender <- X[,2]
probNT <- probAT <- probCO <- rep(0,dim(X)[1])
for(jj in 1:dim(X)[1]){
if(gender[jj]==1){
PCO <- exp( -(age[jj]-20)*(age[jj]-50)/150 )
PAT <- exp( -(age[jj]-40)*(age[jj]-65)/150 )
PNT <- 1
probCO[jj] <- PCO/(PNT+PAT+PCO)
probNT[jj] <- PNT/(PNT+PAT+PCO)
probAT[jj] <- PAT/(PNT+PAT+PCO)
} else {
PCO <- exp( -(age[jj]-20)*(age[jj]-50)/20 )
PAT <- exp( -(age[jj]-40)*(age[jj]-65)/20 )
PNT <- 1
probCO[jj] <- PCO/(PNT+PAT+PCO)
probNT[jj] <- PNT/(PNT+PAT+PCO)
probAT[jj] <- PAT/(PNT+PAT+PCO)
}
}
return(cbind(probNT,probAT,probCO))
}
###################################
# Compliance Probability
###################################
# png("Compliance.png",width=7,height=2,unit="in",res=500)
X.grid <- expand.grid(1,c(0,1),seq(0,100,1))
PROB <- probCS(X.grid)
layout(matrix(c(1,2,3,4,5,6),1,3,byrow=T),widths=c(3,3,1),heights=c(1))
par(mar=c(3,3,2,1))
plot(X.grid[X.grid[,2]==1,3], PROB[X.grid[,2]==1,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X.grid[X.grid[,2]==1,3], PROB[X.grid[,2]==1,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X.grid[X.grid[,2]==1,3], PROB[X.grid[,2]==1,3],ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(ylab="Prob",line=2)
title(main="Male",line=1)
plot(X.grid[X.grid[,2]==0,3], PROB[X.grid[,2]==0,1],xlim=c(0,100),ylim=c(0,1),type='l',xlab="",ylab="")
par(new=T)
plot(X.grid[X.grid[,2]==0,3], PROB[X.grid[,2]==0,2],xlim=c(0,100),ylim=c(0,1),type='l',col=2,xlab="",ylab="")
par(new=T)
plot(X.grid[X.grid[,2]==0,3], PROB[X.grid[,2]==0,3],xlim=c(0,100),ylim=c(0,1),type='l',col=4,xlab="",ylab="")
title(main="Female",line=1)
plot.new()
segments(0,0.7,0.3,0.7,col=1)
text(0.4,0.7,"NT",pos=4)
segments(0,0.5,0.3,0.5,col=2)
text(0.4,0.5,"AT",pos=4)
segments(0,0.3,0.3,0.3,col=4)
text(0.4,0.3,"CO",pos=4)
# dev.off()
###################################
# Reform Data
###################################
HHID <- AData.valid$hhID
XX <- AData.valid[,c("male","age","vaccine08")]
ff <- formula("~male+age+I(age^2)+vaccine08")
Pre.Cov <- model.matrix(ff,XX)
colnames(Pre.Cov)[1] <- "Const"
PROB <- probCS(Pre.Cov)
probNT <- PROB[,1]
probAT <- PROB[,2]
probCO <- PROB[,3]
set.seed(8888)
CompSt <- rep("NT",dim(Pre.Cov)[1])
for(jj in 1:dim(Pre.Cov)[1]){
CompSt[jj] <- sample(c("NT","AT","CO"),1,prob=c(probNT[jj],probAT[jj],probCO[jj]))
}
A0 <- as.numeric(CompSt=="AT")
A1 <- as.numeric(CompSt!="NT")
prop.of.trt1 <- prop.of.trt0 <- rep(0,dim(Pre.Cov)[1])
for(jj in 1:dim(Pre.Cov)[1]){
groupind <- which(HHID==HHID[jj])
groupind <- setdiff(groupind,jj)
if(length(groupind)>0){
prop.of.trt1[jj] <- sum(CompSt[groupind]!="NT")/length(groupind)
prop.of.trt0[jj] <- sum(CompSt[groupind]=="AT")/length(groupind)
} else {
prop.of.trt1[jj] <- 0
prop.of.trt0[jj] <- 0
}
}
para <- c(-3,2,4,2)
probA0 <- rep(para[1],dim(Pre.Cov)[1]) +                                   # Base (-3)
para[2]*as.numeric(CompSt=="AT") +                               # Treatment effect (2)
para[3]*AData.valid[,"vaccine08"]*as.numeric(CompSt=="AT") +          # Additional treatment effect on individuals that have been vaccinated (4)
para[4]*prop.of.trt0*as.numeric(CompSt!="AT")                    # spillover effect from AT to nonAT (2)
probA1 <- rep(para[1],dim(Pre.Cov)[1]) +                                   # Base (-3)
para[2]*as.numeric(CompSt!="NT") +                               # Treatment effect (2)
para[3]*AData.valid[,"vaccine08"]*as.numeric(CompSt!="NT") +          # Additional treatment effect on individuals that have been vaccinated (4)
para[4]*prop.of.trt1*as.numeric(CompSt=="NT")                    # spillover effect from nonNT to NT (2)
Y0 <- rbinom(dim(Pre.Cov)[1],1,1/(1+exp(-probA0)))
Y1pot <- rbinom(dim(Pre.Cov)[1],1,1/(1+exp(-probA1)))
Y1 <- apply(cbind(Y1pot,Y0),1,max)
set.seed(1234)
Zc <- rep(0,length(unique(HHID)))
Zc[sample(151,72)] <- 1
Z <- rep(0,length(HHID))
for(ii in 1:151){
Z[which(HHID==sort(unique(HHID))[ii])] <- Zc[ii]
}
Simulated.Data <- Simulation.Reform(Y0,Y1,Z,A0,A1,HHID,Pre.Cov,seed=8888)
ITT(Simulated.Data,Input.Type="Sim")
HTE(Simulated.Data,Xvar=1:5,constant=TRUE,Input.Type="Sim")
Bound1 <- SharpBound(Simulated.Data,paraC=c(1,2,3,4,5),method="Logistic",CIcalc=TRUE,SSsize=10,level=0.95,seed=1,Input.Type="Sim")
Bound2 <- LongHudgens(Simulated.Data,paraC=c(2,5),CIcalc=TRUE,SSsize=10,level=0.95,seed=1,Input.Type="Sim")
Bound3 <- Bound.Intersect(Bound1,Bound2,level=0.95)
Simulation.Reform <- function(Y0,Y1,Z,A0,A1,C,X,seed=1){
Data <- list()
Data$Y0 <- Y0
Data$Y1 <- Y1
Data$Y <- Y1*Z + Y0*(1-Z)
Data$Z <- Z
Data$A0 <- A0
Data$A1 <- A1
Data$A <- A1*Z + A0*(1-Z)
Data$C <- C
Data$X <- X
if( sum(apply((X-1)^2,2,sum)==0)==0 ){
X <- cbind(1,X)
colnames(X) <- c("Const",colnames(X))
} else {
pos.const <- which(apply((X-1)^2,2,sum)==0)
if( pos.const>1 ){
X <- X[,c(pos.const,(1:dim(X)[2])[-pos.const])]
}
}
Data$N <- length(Data$Y)
Data$J <- length(table(Data$C))
Data$Class <- unique(Data$C)
Data$n <- rep(0,Data$N)
for(jj in 1:length(Data$N)){
Data$n[jj] <- sum(Data$C==Data$C[jj])
}
Data$nc <- rep(0,Data$J)
for(jj in 1:Data$J){
Data$nc[jj] <- sum(Data$C==Data$Class[jj])
}
Data$Zc <- as.numeric(unique(cbind(Data$C,Data$Z))[,2])
Data$m <- sum(Data$Zc)
Data$CompSt <- rep("",Data$N)
Data$CompSt[(A1==0 & A0==0)] <- "NT"
Data$CompSt[(A1==1 & A0==1)] <- "AT"
Data$CompSt[(A1==1 & A0==0)] <- "CO"
set.seed(seed)
Data$error <- cbind( 2*runif(Data$N)*(10^(-10)) - 10^(-10),
2*runif(Data$N)*(10^(-10)) - 10^(-10),
2*runif(Data$N)*(10^(-10)) - 10^(-10) )
return(Data)
}
Simulated.Data <- Simulation.Reform(Y0,Y1,Z,A0,A1,HHID,Pre.Cov,seed=8888)
Simulated.Data$CompSt
